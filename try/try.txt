*** Settings ***
Documentation     badge/getBadgeByTypeAndBusinessId 根据勋章类型、业务key获取勋章信息接口
Resource          ../Public/public_lib.txt
Library           ./try.py

*** Variable ***
${pwd}            123456    # 密码
${userName}       13829744541    # 默认的用户名
${ContentType}    application/x-www-form-urlencoded;charset=UTF-8    # POST数据格式

*** Test Cases ***    option          fid                                         ret       msg
Class_01              [Documentation]    badge/getBadgeByTypeAndBusinessId TestCase测试用例
                      [Tags]             Test                                               Online    gxy
                      [Template]         badge_getBadgeByTypeAndBusinessId_Post_Keywords
                      like               283844538                                             0         成功

*** Keywords ***
badge_getBadgeByTypeAndBusinessId_Post_Keywords
    [Arguments]    ${option}    ${fid}    ${ret}    ${msg}
    [Documentation]    badge/getBadgeByTypeAndBusinessId 接口用例的Keywords关健字

    ${path}=    set variable    /feed.aspx
    ${maps}=    create dictionary
    ${mapss}=    create dictionary
    set to dictionary    ${maps}    option=${option}
    set to dictionary    ${maps}    fid=${fid}
    set to dictionary    ${mapss}    fid=${fid}
    set to dictionary    ${mapss}    option=re
    set to dictionary    ${mapss}    touid=0

    log    ========输出接口URL：${user_URL}${path}
    log    ========接口的入参为：${userName}:${maps}==========
    # ${user_list}=       create list
    # ${len}     evaluate    len(${user_list})
    # : FOR    ${index}    IN RANGE    0    8
    # \    ${value}      Try Try     ${user_list}
    # \    ${username1}=     evaluate       '${value[0]}'
    # \    ${user_list}=     create list       ${value[1]}
    # \    ${resp}=    thejoyrun_postd    ${path}    ${maps}    ${username1}    ${api_URL}
    

    
    # ${user_list}=       create list       33@yy.com 34@yy.com 35@yy.com 36@yy.com 37@yy.com 38@yy.com 39@yy.com 40@yy.com
    # ${user_list}=       create list       32519837 32519884 32519888 32519896 32519897 32519913 32519916 32519920 32519920
    : FOR    ${index}    IN RANGE    0    8
    \    ${value}      Try Try     ${user_list}
    \    ${username1}=     evaluate       '${value[0]}'
    \    ${user_list}=     create list       ${value[1]}
    \    ${memo}=    Try Again    
    \    set to dictionary    ${mapss}    memo=${memo}
    \    ${resp}=    thejoyrun_postd    ${path}    ${mapss}    ${username1}    ${api_URL}
    

